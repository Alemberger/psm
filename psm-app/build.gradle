
buildscript {
    repositories {
        mavenCentral()
        maven {
            url  'http://dl.bintray.com/djmijares/gradle-plugins'
        }
    }
    dependencies {
        classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
    }
}

def jbpm_version = '5.4.0.Final'

ext.libs = [
    jbpm_human_task_core: dependencies.create("org.jbpm:jbpm-human-task-core:${jbpm_version}") {
        exclude group: 'javax.transaction'
        exclude group: 'org.apache.cxf'
        exclude group: 'org.hibernate.javax.persistence'
    },
    jbpm_persistence_jpa: dependencies.create("org.jbpm:jbpm-persistence-jpa:${jbpm_version}") {
       exclude group: 'javax.transaction'
       exclude group: 'org.hibernate'
       exclude group: 'org.hibernate.javax.persistence'
    },
]

allprojects {
    repositories {
        mavenCentral()
    }
}

project(':services') {
    apply plugin: 'java'

    dependencies {
        compile libs.jbpm_human_task_core
        compile fileTree(dir: '../cms-portal-services/lib', include: '*.jar', exclude: 'cms-core.jar')
        compile project(path: ':cms-business-model', configuration: 'archives')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/javax')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/org/hibernate')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/org/codehaus/jackson')
    }
    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
    }
}

project(':cms-business-process') {
    apply plugin: 'java'
    dependencies {
        compile project(path: ':services', configuration: 'archives')
        compile project(path: ':cms-business-model', configuration: 'archives')
        compile libs.jbpm_human_task_core
        compile fileTree(dir: '../cms-portal-services/lib', include: '*.jar', exclude: 'cms-core.jar')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/javax')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/org/hibernate')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/org/codehaus/jackson')
        runtime libs.jbpm_persistence_jpa
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
    }
}

project(':cms-web') {
    apply plugin: 'war'
    dependencies {
        providedCompile project(':services')
        providedCompile fileTree(dir: 'WebContent/WEB-INF/lib')
    }
    webAppDirName = 'WebContent'
}

project(':cms-business-model') {
    apply plugin: 'com.github.jacobono.jaxb'
    apply plugin: 'java'
    compileJava.dependsOn xjc
    System.setProperty('javax.xml.accessExternalSchema', 'file')

    dependencies {
         jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7'
         jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7'
         jaxb 'javax.xml.bind:jaxb-api:2.2.7'
    }

    sourceSets {
        main {
            java {
                srcDirs = [
                    'src/main/java',
                    'src/main/generated'
                ]
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
    }
    jaxb {
        xsdDir = 'cms-business-model/src/main/resources'
        bindingsDir = 'cms-business-model/src/main/resources'
        bindings = ['jaxb-bindings.xjb']
        xjc {
            producesDir = 'src/main/generated'
            destinationDir = 'src/main/generated'
            generatePackage = 'gov.medicaid.domain.model'
        }
    }
}

project(':cms-portal-services') {
    apply plugin: 'ear'
    dependencies {
        deploy project(path: ':cms-web', configuration: 'archives')
        deploy project(':cms-business-process')
        earlib fileTree(dir: 'lib')
        earlib libs.jbpm_human_task_core
        earlib libs.jbpm_persistence_jpa
        earlib project(path: ':cms-business-model', configuration: 'archives')
        earlib project(path: ':services', configuration: 'archives')
   }

    ear {
        appDirName 'EarContent'
    }
}

